#+NAME: HashiCorp playground

This HashiCorp playground demonstrates capabilities of Vault, Consul and Boundary.

* Kind
Let's first create a Kind environment
#+begin_src bash
kind create cluster --config=kind/cluster.yaml
#+end_src

Set the kubectl configuration to point to kind
#+begin_src bash
kubectl cluster-info --context kind-kind
#+end_src

Now we have a kind cluster!

Let's also install the metrics-server, so we can observe any potential memory issues
#+begin_src bash
helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/
#+end_src

Update the repo so we can install the metrics-server
#+begin_src bash
helm repo update
#+end_src

Install the metrics-server with compatibility options for kind
#+begin_src bash
helm upgrade --install --set args={--kubelet-insecure-tls} metrics-server metrics-server/metrics-server --namespace kube-system
#+end_src

Now we can observe the memory usage of the cluster using =kubectl top nodes=

Time to configure our cluster to do something...

* Homebrew
We assume you also use a Mac with homebrew.

First, we need to add the [[https://github.com/hashicorp/homebrew-tap][homebrew-tap]], which contains all the HashiCorp software
#+begin_src bash
brew tap hashicorp/tap
#+end_src

* Consul
There's a special CLI available to deploy the Consul helm chart.

Let's install it!
#+begin_src bash
brew install hashicorp/tap/consul-k8s
#+end_src

Check the installed version
#+begin_src bash
consul-k8s version
#+end_src

Let's now install the Consul Helm chart
#+begin_src bash
consul-k8s install -config-file=consul/override-values.yaml
#+end_src

Watch Consul being deployed
#+begin_src bash
watch kubectl get pods -n consul
#+end_src

Port forward to see the cluster
#+begin_src bash
kubectl port-forward svc/consul-ui --namespace consul 8501:443
#+end_src

Afterwards you can navigate to the cluster: https://localhost:8501/ui/dc1/services

* Vault
We need to install helm before we can install the Vault helm chart
#+begin_src bash
brew install helm
#+end_src

And let's create the Vault namespace
#+begin_src bash
kubectl create namespace vault
#+end_src

We need to add the HashiCorp helm chart [[https://github.com/hashicorp/vault-helm][repository]]
#+begin_src bash
helm repo add hashicorp https://helm.releases.hashicorp.com
#+end_src

Update the helm repo
#+begin_src bash
helm repo update
#+end_src

Let's now install the Vault Helm chart
#+begin_src bash
helm install vault hashicorp/vault -f vault/override-values.yaml -n vault
#+end_src

Watch Vault being deployed
#+begin_src bash
watch kubectl get pods -n vault
#+end_src

After the pods have started, we can initialize the Vault and add the keys to the cluster-keys.json file
#+begin_src bash
kubectl exec -n vault vault-0 -- vault operator init -key-shares=1 -key-threshold=1 -format=json > cluster-keys.json
#+end_src

Port forward the Vault port to localhost
#+begin_src bash
kubectl port-forward service/vault --namespace vault 8200:8200
#+end_src

Afterwards you can navigate to the cluster: https://localhost:8200

* Boundary



* Tearing down
Show the kind cluster
#+begin_src bash
kind get clusters
#+end_src

Delete the cluster
#+begin_src bash
kind delete cluster
#+end_src
